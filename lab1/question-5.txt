What are defer, panic and recover? How do you recover from a run-time panic? 

Answer: defer, panic and recover are key words related to error handling mechanisms in Go language. They are comparable to exception capturing mechanisms in other languages. In particular, when an error occurred, panic will be triggered. If a panic is triggered, then the program will crash. It will be huge risk if a resource is open as the data in such resource is highly likely to be damaged. Thus there should be a way to ensure that even error occurred and program crashed, the resouce close action must be executed. In many other languages, the key word finally can do such job. In Go language, the key word defer play such a role. And command after defer will be surely executed no matter what happened. Moreover, the command after defer will not be executed right away but after all other commands are finished. The key word recover is used to recover information and resume program from panic. It's often used in together with defer as otherwise the recover command will have no chance to execute after panic is triggered. 

To recover from a run-time panic, write the code "defer recover()" before the code snippet that may cause run-time panic. In such a way even run-time panic is triggered, the program will be resume and error information can be obtained.
